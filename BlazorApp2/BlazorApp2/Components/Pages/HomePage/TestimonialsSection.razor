@using BlazorApp2.Models;

<section>
    @if (testimonials is null)
    {
        <p><em>loading ...</em></p>
    }
    else
    {
        <h2 class="header-text">Kind words from co-workers</h2>
        <div class="testimonial-content">
            <p class="testimonial-quote secondary-subheader-text">
                @testimonials[index].Quote
            </p>

            <h3 class="weight-heavy subheader-text">@testimonials[index].Name</h3>
            <h4 class="body-text">@testimonials[index].PositionAndCompany</h4>
            @if (testimonials[index].OnLinkedIn)
            {
                <p class="secondary-text">see the full review on my<a rel="noreferrer" href="https://www.linkedin.com/in/wyatt-sanders/" target="_blank"> LinkedIn </a></p>
            }
        </div>
        <img class="left" />
        <div class="carosel-page-selector">
            @for (int i = 0; i < testimonials.Count; i++)
            {
                int temp = i;
                <button class="carosel-dot @(i == index?"carosel-dot-filled":"")" onclick="@(()=>SetCaroselIndex(temp))"></button>
            }
        </div>
        <img class="right" />
    }
</section>
@code {
    //TODO section Height
    int index = 0;
    bool isautoAdvancingCarosel = true;

    private List<Testimonial>? testimonials;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        testimonials = Testimonials.GetTestimonialList(); ;
    }

    public async Task AutoAdvanceCarosel()
    {
        await Task.Delay(2500);
        while (isautoAdvancingCarosel)
        {
            index++;
            await InvokeAsync(() => this.StateHasChanged());
            await Task.Delay(2500);
        }
    }

    private void SetCaroselIndex(int newIndex)
    {
        if (testimonials is null)
        {
            return;    
        }
        if (newIndex >= testimonials.Count)
        {
            newIndex = testimonials.Count - 1;
        }
        else if(newIndex < 0)
        {
            newIndex = 0;
        }

        index = newIndex;
        StateHasChanged();
    }
}
